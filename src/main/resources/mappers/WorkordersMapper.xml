<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.platform.dao.WorkordersMapper">
    <resultMap id="BaseResultMap" type="com.example.platform.pojo.Workorders">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="order_number" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="order_status" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="id_number" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sex" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="appeal_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="appeal_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="appeal_content" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="organ_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="organ_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="result_content" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="result_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="refuse_content" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="refuse_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="sign_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="last_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="modify_content" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved1" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved2" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved3" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved4" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved5" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, order_number, order_status, user_code, user_name, id_number, phone, sex, email, 
    appeal_time, appeal_type, address, appeal_content, organ_id, organ_name, result_content, 
    result_time, refuse_content, refuse_time,sign_time,last_time,modify_content,reserved1, reserved2, reserved3, reserved4,
    reserved5
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from platform_workorders
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from platform_workorders
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.platform.pojo.Workorders">
    insert into platform_workorders (id, order_number, order_status, 
      user_code, user_name, id_number, 
      phone, sex, email, 
      appeal_time, appeal_type, address, 
      appeal_content, organ_id, organ_name, 
      result_content, result_time, refuse_content, 
      refuse_time,modify_content ,last_time,reserved1, reserved2,
      reserved3, reserved4, reserved5
      )
    values (#{id,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR}, #{orderStatus,jdbcType=VARCHAR}, 
      #{userCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{appealTime,jdbcType=TIMESTAMP}, #{appealType,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{appealContent,jdbcType=VARCHAR}, #{organId,jdbcType=INTEGER}, #{organName,jdbcType=VARCHAR}, 
      #{resultContent,jdbcType=VARCHAR}, #{resultTime,jdbcType=TIMESTAMP}, #{refuseContent,jdbcType=VARCHAR}, 
      #{refuseTime,jdbcType=TIMESTAMP}, #{modifyContent,jdbcType=VARCHAR}, now(),#{reserved1,jdbcType=VARCHAR}, #{reserved2,jdbcType=VARCHAR},
      #{reserved3,jdbcType=VARCHAR}, #{reserved4,jdbcType=VARCHAR}, #{reserved5,jdbcType=VARCHAR}
      )
  </insert>
    <select id="selectWorkorders" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from platform_workorders
        where 1=1
        <if test="orderNumber != null">
            and order_number like concat('%',#{orderNumber},'%')
        </if>
        <if test="appealType != null and appealType != ''">
            and appeal_type = #{appealType}
        </if>
        <if test="startTime != '' and endTime != null">
            and appeal_time between #{startTime} and now()
        </if>
        <if test="startTime != null and endTime != ''">
            and appeal_time between '' and #{endTime}
        </if>
        <if test="startTime != '' and endTime != ''">
            and appeal_time between #{startTime} and #{endTime}
        </if>
        <if test="organId != null">
            and organ_id = #{organId}
        </if>
        <if test="orderStatus != null and orderStatus != ''">
            and order_status = #{orderStatus}
        </if>
        <if test="userCode != null and userCode != ''">
            and user_code =#{userCode}
        </if>
        <if test="appealContent != null">
            and appeal_content like concat('%',#{appealContent},'%')
        </if>
    </select>
    <select id="workordersCount" resultType="int">
        select
        count(1)
        from platform_workorders
        where 1=1
        <if test="orderNumber != null">
            and order_number like concat('%',#{orderNumber},'%')
        </if>
        <if test="appealType != null and appealType != ''">
            and appeal_type = #{appealType}
        </if>
        <if test="startTime != '' and endTime != null">
            and appeal_time between #{startTime} and now()
        </if>
        <if test="startTime != null and endTime != ''">
            and appeal_time between '' and #{endTime}
        </if>
        <if test="startTime != '' and endTime != ''">
            and appeal_time between #{startTime} and #{endTime}
        </if>
        <if test="organId != null">
            and organ_id = #{organId}
        </if>
        <if test="orderStatus != null and orderStatus != ''">
            and order_status = #{orderStatus}
        </if>
        <if test="userCode != null and userCode != ''">
            and user_code =#{userCode}
        </if>
        <if test="appealContent != null">
            and appeal_content like concat('%',#{appealContent},'%')
        </if>
    </select>
    <update id="updateModify" parameterType="map">
        update platform_workorders
        <set>
            <if test="orderStatus != null">
                order_status = #{orderStatus},
            </if>
            <if test="modifyContent != null">
                modify_content = #{modifyContent},
            </if>
            last_time = now(),
        </set>
        where id = #{id}
    </update>
    <update id="assign" parameterType="map">
        update platform_workorders
        <set>
            <if test="resultContent != null">
                result_content = #{resultContent},
            </if>
            <if test="resultTime != null">
                result_time = #{resultTime},
            </if>
            <if test="refuseTime != null">
                refuse_time = #{refuseTime},
            </if>
            <if test="signTime != null">
                sign_time = #{signTime},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus},
            </if>
            last_time = now()
        </set>
        where id = #{id}
    </update>
    <select id="selectOrderNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from platform_workorders
        where order_number = #{orderNumber}
    </select>
    <update id="sign" parameterType="map">
        update platform_workorders
        <set>
            <if test="orderStatus != null">
                order_status = #{orderStatus},
            </if>
            last_time = now()
        </set>
        where id = #{id}
    </update>
    <update id="refuse" parameterType="map">
        update platform_workorders
        <set>
            <if test="orderStatus != null">
                order_status = #{orderStatus},
            </if>
            <if test="refuseContent != null">
                refuse_content = #{refuseContent},
            </if>
            last_time = now(),
        </set>
        where id = #{id}
    </update>
    <update id="result" parameterType="map">
        update platform_workorders
        <set>
            <if test="resultContent != null">
                result_content = #{resultContent},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus},
            </if>
            last_time = now()
        </set>
        where id = #{id}
    </update>
    <update id="toClose" parameterType="map">
        update platform_workorders
        <set>
            <if test="orderStatus != null">
                order_status = #{orderStatus},
            </if>
            last_time = now()
        </set>
        where id = #{id}
    </update>
    <update id="close" parameterType="map">
        update platform_workorders
        <set>
            <if test="orderStatus != null">
                order_status = #{orderStatus},
            </if>
            last_time = now()
        </set>
        where id = #{id}
    </update>
    <update id="audit" parameterType="map">
        update platform_workorders
        <set>
            <if test="orderStatus != null">
                order_status = #{orderStatus},
            </if>
            <if test="appealType != null">
                appeal_type = #{appealType},
            </if>
            <if test="organId != null">
                organ_id = #{organId},
            </if>
            <if test="organName != null">
                organ_name = #{organName},
            </if>
            <if test="address != null">
                address = #{address},
            </if>
            <if test="appealContent != null">
                appeal_content = #{appealContent},
            </if>
            last_time = now()
        </set>
        where id = #{id}
    </update>
    <select id="allWorkorders" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from platform_workorders
    </select>


    <select id="getCountOfType" resultType="hashmap" parameterType="map">
        select pbi.base_name as name ,count(pw.order_status) as value
        from platform_base_info pbi
        left join platform_workorders pw
        on pw.order_status = pbi.base_code
        where pbi.base_type = 'OrderStatus'
        group by
	        pbi.base_name
    </select>

    <select id="getOrganData" resultType="hashmap" parameterType="map">
        select 	po.organ_name as name,count(pw.organ_id) as value
        from platform_organ po
        left join platform_workorders pw
        on po.id = pw.organ_id
        where length(po.id) = 5
        and length(po.parent_id) =3
        group by
	        po.organ_name
    </select>
    <select id="getDayData" resultType="hashmap" parameterType="map">
        select concat(year(pw.appeal_time),"-",
        month(pw.appeal_time),"-",
        day(pw.appeal_time)) 'name',
        count(*) 'value'
        from platform_workorders pw
        group by year(pw.appeal_time),
        month(pw.appeal_time),
        day(pw.appeal_time)
        order by pw.appeal_time
        desc
        limit 0,7
    </select>
</mapper>