<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.platform.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.example.platform.pojo.Role">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="role_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="role_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved1" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved2" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved3" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved4" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved5" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, role_code, role_name, remark, reserved1, reserved2, reserved3, reserved4, reserved5
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from platform_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from platform_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.platform.pojo.Role">
    insert into platform_role (id, role_code, role_name, 
      remark, reserved1, reserved2, 
      reserved3, reserved4, reserved5
      )
    values (#{id,jdbcType=INTEGER}, #{roleCode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{reserved1,jdbcType=VARCHAR}, #{reserved2,jdbcType=VARCHAR}, 
      #{reserved3,jdbcType=VARCHAR}, #{reserved4,jdbcType=VARCHAR}, #{reserved5,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.example.platform.pojo.Role">
        insert into platform_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleCode != null">
                role_code,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="reserved1 != null">
                reserved1,
            </if>
            <if test="reserved2 != null">
                reserved2,
            </if>
            <if test="reserved3 != null">
                reserved3,
            </if>
            <if test="reserved4 != null">
                reserved4,
            </if>
            <if test="reserved5 != null">
                reserved5,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleCode != null">
                #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="reserved1 != null">
                #{reserved1,jdbcType=VARCHAR},
            </if>
            <if test="reserved2 != null">
                #{reserved2,jdbcType=VARCHAR},
            </if>
            <if test="reserved3 != null">
                #{reserved3,jdbcType=VARCHAR},
            </if>
            <if test="reserved4 != null">
                #{reserved4,jdbcType=VARCHAR},
            </if>
            <if test="reserved5 != null">
                #{reserved5,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.platform.pojo.Role">
        update platform_role
        <set>
            <if test="roleCode != null">
                role_code = #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="reserved1 != null">
                reserved1 = #{reserved1,jdbcType=VARCHAR},
            </if>
            <if test="reserved2 != null">
                reserved2 = #{reserved2,jdbcType=VARCHAR},
            </if>
            <if test="reserved3 != null">
                reserved3 = #{reserved3,jdbcType=VARCHAR},
            </if>
            <if test="reserved4 != null">
                reserved4 = #{reserved4,jdbcType=VARCHAR},
            </if>
            <if test="reserved5 != null">
                reserved5 = #{reserved5,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.platform.pojo.Role">
    update platform_role
    set role_code = #{roleCode,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      reserved1 = #{reserved1,jdbcType=VARCHAR},
      reserved2 = #{reserved2,jdbcType=VARCHAR},
      reserved3 = #{reserved3,jdbcType=VARCHAR},
      reserved4 = #{reserved4,jdbcType=VARCHAR},
      reserved5 = #{reserved5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="checkRoleCode" resultType="int" parameterType="string">
    select count(1)
    from platform_role
    where role_code = #{roleCode}
  </select>
    <select id="getAllRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from platform_role
    </select>
    <select id="allRoleCount" resultType="int">
        select count(1)
        from platform_role
    </select>
    <select id="getRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from platform_role
        where role_code = #{roleCode}
    </select>
    <update id="updateRole" parameterType="map">
        update platform_role
        <set>
            <if test="roleCode != null">
                role_code = #{roleCode},
            </if>
            <if test="roleName != null">
                role_name = #{roleName},
            </if>
            <if test="remark != null">
                remark = #{remark}
            </if>
            where id = #{id}
        </set>
    </update>
</mapper>