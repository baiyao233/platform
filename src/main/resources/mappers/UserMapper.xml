<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.platform.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.platform.pojo.User">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="user_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="id_number" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sex" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="organ_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="organ_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="role" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="reserved1" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved2" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved3" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved4" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="reserved5" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_code, user_name, password, email, phone, id_number, sex, organ_id,organ_name,role, create_time,
    update_time, reserved1, reserved2, reserved3, reserved4, reserved5
  </sql>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from platform_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.platform.pojo.User">
    insert into platform_user (id, user_code, user_name, 
      password, email, phone, 
      id_number, sex, organ_id,organ_name,role,
      create_time, update_time, reserved1, 
      reserved2, reserved3, reserved4, 
      reserved5)
    values (#{id,jdbcType=INTEGER}, #{userCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{idNumber,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER},#{organId,jdbcType=INTEGER},#{organName,jdbcType=VARCHAR} ,
      #{role,jdbcType=INTEGER},now(),now(), #{reserved1,jdbcType=VARCHAR},
      #{reserved2,jdbcType=VARCHAR}, #{reserved3,jdbcType=VARCHAR}, #{reserved4,jdbcType=VARCHAR}, 
      #{reserved5,jdbcType=VARCHAR})
  </insert>

    <select id="checkUserCode" resultType="int" parameterType="string">
        select count(1)
        from platform_user
        where user_code = #{userCode}
  </select>

    <select id="checkEmail" resultType="int" parameterType="string">
    select count(1)
    from platform_user
    where email = #{email}
  </select>

    <select id="checkIdNumber" resultType="int" parameterType="string">
        select count(1)
        from platform_user
        where id_number = #{idNumber}
    </select>

    <select id="checkPhone" resultType="int" parameterType="string">
        select count(1)
        from platform_user
        where phone = #{phone}
    </select>

    <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from platform_user
        where user_code = #{userCode}
        and password = #{password}
    </select>

    <update id="updatePassword" parameterType="map">
        update platform_user
        set password = #{newPassword},
        update_time = now()
        where user_code = #{userCode}
        and id_number = #{idNumber}
        and phone = #{phone}
    </update>
    <select id="getUserCodeInfo" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from platform_user
        where 1=1
        and user_code = #{userCode}
    </select>
    <select id="getAllUserInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from platform_user
        where 1=1
        <if test="userName != null">
            and user_name like concat('%',#{userName},'%')
        </if>
    </select>

    <select id="getCountUser" resultType="int">
        select count(1)
        from platform_user
        where 1=1
        <if test="userName != null">
            and user_name like concat('%',#{userName},'%')
        </if>
    </select>
    <update id="updateInfo" parameterType="map">
        update platform_user
        <if test="userName != null">
            set user_name = #{userName}
        </if>
        <if test="sex != null">
            ,sex = #{sex}
        </if>
        <if test="role != null">
            ,role = #{role}
        </if>
        <if test="organName != null and organName != ''">
            ,organ_name = #{organName}
        </if>
        <if test="organId != null">
            ,organ_id = #{organId}
        </if>
        where user_code = #{userCode}
    </update>
</mapper>